version: '3'
services:
    web:
        image: nginx:1.19
        ports:
            - "81:80"
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
            - ./app:/app
        container_name: ${CONTAINER_WEB}
        networks:
          - pnetwork
    php:
        build:
            context: .
            dockerfile: PHP.DOCKERFILE
        volumes:
            - ./app:/app
        container_name: ${CONTAINER_PHP}
        networks:
          - pnetwork 
    mysqldb:
        image: mariadb:10.7.3
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}

        volumes:
            - mysqldata:/var/lib/mysql
        ports:
            - 3306:3306
        container_name: ${CONTAINER_MYSQL}
        networks:
          - pnetwork

    postgresdb:
        image: postgres
        volumes:
          - postgresdata:/var/lib/postgresql/data
        environment:
          - POSTGRES_DB=${POSTGRES_DB}
          - POSTGRES_USER=${POSTGRES_USER}
          - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        container_name: ${CONTAINER_POSTGRES}
        networks:
          - pnetwork
    adminer:
        image: adminer
        restart: always
        ports:
          - 82:8080
        container_name: ${CONTAINER_ADMINER}
        networks:
          - pnetwork
    pgadmin:
        image: dpage/pgadmin4
        restart: always
        environment:
          PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
          PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        ports:
          - 5051:80
        container_name: ${CONTAINER_PGADMIN}
        networks:
          - pnetwork
    phpmyadmin:
        depends_on:
          - mysqldb
        image: phpmyadmin/phpmyadmin
        container_name: ${CONTAINER_PHPMYADMIN}
        restart: always
        ports:
          - 8089:80
        environment:
          PMA_HOST: mysqldb
          MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        networks:
          - pnetwork
       
networks: 
    pnetwork:
      driver: bridge
volumes:
    mysqldata: {}
    postgresdata: {}
